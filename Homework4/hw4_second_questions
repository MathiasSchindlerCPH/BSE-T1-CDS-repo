#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Nov  2 00:27:54 2021

@author: sandravicariaaguilar
"""

############################################
#
# Now, imagine you are given data from a website that
# has people's CVs. The data comes
# as a list of dictionaries and each
# dictionary looks like this:
#
# { 'user': 'george', 'jobs': ['bar', 'baz', 'qux']}
# e.g. [{'user': 'john', 'jobs': ['analyst', 'engineer']},
#       {'user': 'jane', 'jobs': ['finance', 'software']}]
# we will refer to this as a "CV".
#


#
# 4)
# Create a function called "has_experience_as"
# that has two parameters:
# 1. A list of CV's.
# 2. A string (job_title)
#
# The function should return a list of strings
# representing the usernames of every user that
# has worked as job_title.

def has_experience_as(CV:list ,job_title: str):
    w=[]
    for i in range(len(CV)):
        for k, v in CV[i].items(): 
            for v in v: 
                if job_title == v: 
                    w.append(CV[i]['user'])
    return w

            

                
            
  

                    
           
    
#
# 5)
# Create a function called "job_counts"
# that has one parameter: list of CV's
# and returns a dictionary where the
# keys are the job titles and the values
# are the number of users that have done
# that job.

from collections import Counter 
def job_counts(lst):
    c = []
    for i in range(len(lst)):
        for k, v in lst[i].items():
            if isinstance(v, list): 
                            for v in v: 
                                c.append(v)  

    count =  Counter(c)         
    return count
        
            
    
              
    
                 
            
           
        

 
        

#
# 6)
# Create a function, called "most_popular_job"
# that has one parameter: a list of CV's, and
# returns a tuple (str, int) that represents
# the title of the most popular job and the number
# of times it was held by people on the site.
#
# HINT: You should probably use your "job_counts"
# function!
#
# HINT: You can use the method '.items' on
# dictionaries to iterate over them like a
# list of tuples.

def most_popular_job(lst): 
    c = []
    for i in range(len(lst)):
        for k, v in lst[i].items():
            if isinstance(v, list): 
                            for v in v: 
                                c.append(v)  

    count =  Counter(c).most_common(1)          
    return count




##############